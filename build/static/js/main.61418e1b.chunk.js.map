{"version":3,"sources":["store/loadStatus.ts","store/saveStatus.ts","models/main.ts","store/main/types.ts","store/main/reducer.ts","store/parameters/types.ts","store/parameters/reducer.ts","store/products/types.ts","store/products/reducer.ts","store/rootReducer.ts","store/parameters/actions.ts","store/main/actions.ts","store/parameters/saga.ts","store/products/actions.ts","store/products/saga.ts","store/rootSaga.ts","services/mock.ts","services/http.ts","models/parameter.ts","models/product.ts","services/index.ts","services/api/apiParameter.ts","services/api/apiProduct.ts","hooks/useCustomDispatch.ts","hooks/useCustomSelector.ts","store/rootSelector.ts","store/main/selectors.ts","components/Alert/Alert.tsx","components/Loading/LoadParameters.tsx","components/Loading/LoadProducts.tsx","components/UI/TitleFirst.tsx","components/UI/TitleSecond.tsx","components/UI/TitlePanel.tsx","components/UI/LinkButton.tsx","components/UI/FieldInput.tsx","components/FormSearch/FormSearch.tsx","components/ListProducts/Product/ListParameters/ListParameters.tsx","components/ListProducts/Product/Product.tsx","components/ListProducts/ListProducts.tsx","components/MainPage/MainPage.tsx","components/Loading/LoadProduct.tsx","components/UI/FieldTextarea.tsx","components/UI/FieldSelect.tsx","components/UI/Button.tsx","components/FormProduct/FormProduct.tsx","components/EditProductPage/EditProductPage.tsx","components/CreateProductPage/CreateProductPage.tsx","App.tsx","index.tsx"],"names":["loadStatus","saveStatus","initialMain","statusLoadingProduct","notLoaded","statusLoadingProducts","statusLoadingParameters","statusSavingProduct","notSaved","searchWord","Main","Record","UPDATE_STATUS_LOADING_PRODUCT","UPDATE_STATUS_LOADING_PRODUCTS","UPDATE_STATUS_LOADING_PARAMETERS","UPDATE_STATUS_SAVING_PRODUCT","UPDATE_SEARCH_WORD","reducer","state","action","type","types","set","status","replace","ADD_PARAMETERS","LOAD_PARAMETERS","Map","parameters","forEach","parameter","key","ADD_PRODUCTS","LOAD_PRODUCTS","LOAD_PRODUCT_BY_ID","CREATE_PRODUCT","CREATE_PRODUCT_SUCCESS","UPDATE_PRODUCT","UPDATE_PRODUCT_SUCCESS","products","product","has","id","createRootReducer","history","combineReducers","router","connectRouter","main","addParameters","updateStatusLoadingProduct","updateStatusLoadingProducts","updateStatusSavingProduct","loadParametersAsync","mainSaga","services","call","container","ApiParameter","loadAll","put","loaded","console","error","takeEvery","addProducts","createProductSuccess","updateProductSuccess","loadProductsAsync","createProductAsync","loadProductByIdAsync","updateProductAsync","ApiProduct","errorServer","create","saved","read","update","axios","mock","MockAdapter","delayResponse","name","description","manufacturer","model","price","onGet","reply","onPut","config","JSON","parse","data","Date","now","toString","push","onPost","prefix","suffix","Parameter","Product","bottle","Bottle","service","get","url","request","post","delete","method","then","response","http","map","apiParameter","apiProduct","toJSON","useCustomDispatch","useDispatch","useCustomSelector","selector","arg","useSelector","mainState","mainGetStatusLoadingProduct","createSelector","mainGetStatusLoadingProducts","mainGetStatusLoadingParameters","mainGetStatusSavingProduct","parameterState","productState","productsGetById","_","prop","find","productGetProductsFilterBySearchWord","length","filter","reg","RegExp","Object","values","join","search","Alert","props","Wrapper","LoaderIcon","size","text","WarningIcon","styled","div","LoaderStyledIcon","WarningStyledIcon","LoadParameters","dispatch","useEffect","LoadProducts","TitleFirst","children","h1","theme","color_title","TitleSecond","TitlePanel","TitlePanelStyled","media_mobile","LinkButton","LinkButtonStyled","Link","color_main","FieldInput","FieldInputStyled","input","FormSearch","Label","FieldSearchInput","onChange","e","handleChangeSearch","target","value","placeholder","ListParameters","dictionaryGetByKey","libraryParameters","libraryParameter","entries","productParameters","keyValue","Value","CardProduct","HeadCardProduct","Name","to","EditIcon","BodyCardProduct","BockDescription","TitleBlock","Text","BockListParameters","Edit","media_tablet","article","ListProducts","valueSeq","MainPage","statusProducts","statusParameters","updateSearchWord","LoadProduct","idProduct","FieldTextareaStyled","textarea","FieldSelect","FieldSelectStyled","ref","innerRef","select","Button","ButtonStyled","button","FormProduct","useState","setProduct","isProductNotSaved","setIsProductNotSaved","refSelectAddParameter","useRef","saveStatusProduct","availableParameters","handleChangeValueStaticParameter","typeForm","Panel","StaticParameter","FieldName","FieldDescription","DynamicParameter","LabelParameter","WrapperFieldParameter","handleChangeValueDynamicParameter","ButtonDeleteParameter","onClick","Reflect","deleteProperty","handleDeleteParameter","TextButtonDeleteParameter","ButtonAddParameter","current","TextButtonAddParameter","ButtonSaveProduct","save","createProduct","updateProduct","ButtonParameter","span","SavedIcon","EditProductPage","statusProduct","useParams","CreateProductPage","App","exact","path","component","createHashHistory","basename","packageJson","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","routerMiddleware","run","rootSaga","all","parameterSaga","productSaga","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61418e1b.chunk.js","sourcesContent":["export enum loadStatus {\n    notLoaded,\n    loaded,\n    errorServer,\n}\n","export enum saveStatus {\n    notSaved,\n    save,\n    saved,\n    errorServer,\n}\n","import { Record } from \"immutable\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { saveStatus } from \"src/store/saveStatus\";\n\nexport interface IMain {\n    statusLoadingProduct: loadStatus;\n    statusLoadingProducts: loadStatus;\n    statusLoadingParameters: loadStatus;\n    statusSavingProduct: saveStatus;\n    searchWord: string;\n}\n\nconst initialMain: IMain = {\n    statusLoadingProduct: loadStatus.notLoaded,\n    statusLoadingProducts: loadStatus.notLoaded,\n    statusLoadingParameters: loadStatus.notLoaded,\n    statusSavingProduct: saveStatus.notSaved,\n    searchWord: \"\",\n};\n\nexport default class Main extends Record(initialMain) {}\n","export const UPDATE_STATUS_LOADING_PRODUCT = \"UPDATE_STATUS_LOADING_PRODUCT\";\nexport const UPDATE_STATUS_LOADING_PRODUCTS = \"UPDATE_STATUS_LOADING_PRODUCTS\";\nexport const UPDATE_STATUS_LOADING_PARAMETERS = \"UPDATE_STATUS_LOADING_PARAMETERS\";\nexport const UPDATE_STATUS_SAVING_PRODUCT = \"UPDATE_STATUS_SAVING_PRODUCT\";\nexport const UPDATE_SEARCH_WORD = \"UPDATE_SEARCH_WORD\";\n","import { ActionTypesInfer } from \"src/store/actionTypes\";\nimport Main from \"src/models/main\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\n\nexport type TStoreMain = Main;\n\nconst reducer = (state: TStoreMain = new Main(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.UPDATE_STATUS_LOADING_PRODUCT:\n            return state.set(\"statusLoadingProduct\", action.status);\n\n        case types.UPDATE_STATUS_LOADING_PRODUCTS:\n            return state.set(\"statusLoadingProducts\", action.status);\n\n        case types.UPDATE_STATUS_LOADING_PARAMETERS:\n            return state.set(\"statusLoadingParameters\", action.status);\n\n        case types.UPDATE_STATUS_SAVING_PRODUCT:\n            return state.set(\"statusSavingProduct\", action.status);\n\n        case types.UPDATE_SEARCH_WORD:\n            return state.set(\"searchWord\", action.searchWord.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"));\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const ADD_PARAMETERS = \"ADD_PARAMETERS\";\nexport const LOAD_PARAMETERS = \"LOAD_PARAMETERS\";\n","import { Map } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport Parameter from \"src/models/parameter\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\n\nexport type TStoreParameter = Map<Parameter[\"key\"], Parameter>;\n\nconst reducer = (state: TStoreParameter = Map(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_PARAMETERS:\n            return state;\n\n        case types.ADD_PARAMETERS:\n            action.parameters.forEach((parameter: Parameter) => {\n                state = state.set(parameter.key, parameter);\n            });\n            return state;\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","export const ADD_PRODUCTS = \"ADD_PRODUCTS\";\nexport const LOAD_PRODUCTS = \"LOAD_PRODUCTS\";\nexport const LOAD_PRODUCT_BY_ID = \"LOAD_PRODUCT_BY_ID\";\nexport const CREATE_PRODUCT = \"CREATE_PRODUCT\";\nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\";\nexport const UPDATE_PRODUCT = \"UPDATE_PRODUCT\";\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\n","import { Map } from \"immutable\";\nimport { ActionTypesInfer } from \"src/store/actionTypes\";\nimport Product from \"src/models/product\";\nimport * as types from \"./types\";\nimport * as actions from \"./actions\";\n\nexport type TStoreProduct = Map<Product[\"id\"], Product>;\n\nconst reducer = (state: TStoreProduct = Map(), action: ActionTypesInfer<typeof actions>) => {\n    switch (action.type) {\n        case types.LOAD_PRODUCTS:\n            return state;\n\n        case types.ADD_PRODUCTS:\n            action.products.forEach((product: Product) => {\n                if (!state.has(product.id)) state = state.set(product.id, product);\n            });\n            return state;\n\n        case types.CREATE_PRODUCT_SUCCESS:\n        case types.UPDATE_PRODUCT_SUCCESS:\n            return state.set(action.product.id, action.product);\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport { History, LocationState } from \"history\";\nimport main, { TStoreMain } from \"./main/reducer\";\nimport parameters, { TStoreParameter } from \"./parameters/reducer\";\nimport products, { TStoreProduct } from \"./products/reducer\";\n\nexport interface IStore {\n    router: typeof connectRouter;\n    main: TStoreMain;\n    parameters: TStoreParameter;\n    products: TStoreProduct;\n}\n\nconst createRootReducer = (history: History<LocationState>) =>\n    combineReducers({\n        router: connectRouter(history),\n        main,\n        parameters,\n        products,\n    });\n\nexport default createRootReducer;\n","import * as types from \"./types\";\nimport Parameter from \"src/models/parameter\";\n\nexport const addParameters = (parameters: Parameter[]) =>\n    ({\n        type: types.ADD_PARAMETERS,\n        parameters,\n    } as const);\n\nexport const loadParameters = () =>\n    ({\n        type: types.LOAD_PARAMETERS,\n    } as const);\n","import * as types from \"./types\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { saveStatus } from \"../saveStatus\";\n\nexport const updateStatusLoadingProduct = (status: loadStatus) =>\n    ({\n        type: types.UPDATE_STATUS_LOADING_PRODUCT,\n        status,\n    } as const);\n\nexport const updateStatusLoadingProducts = (status: loadStatus) =>\n    ({\n        type: types.UPDATE_STATUS_LOADING_PRODUCTS,\n        status,\n    } as const);\n\nexport const updateStatusLoadingParameters = (status: loadStatus) =>\n    ({\n        type: types.UPDATE_STATUS_LOADING_PARAMETERS,\n        status,\n    } as const);\n\nexport const updateStatusSavingProduct = (status: saveStatus) =>\n    ({\n        type: types.UPDATE_STATUS_SAVING_PRODUCT,\n        status,\n    } as const);\n\nexport const updateSearchWord = (searchWord: string) =>\n    ({\n        type: types.UPDATE_SEARCH_WORD,\n        searchWord,\n    } as const);\n","import bottle from \"src/services\";\nimport { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport * as types from \"./types\";\nimport { addParameters, loadParameters } from \"./actions\";\nimport { updateStatusLoadingParameters } from \"src/store/main/actions\";\nimport { loadStatus } from \"src/store/loadStatus\";\n\nfunction* loadParametersAsync(services: typeof bottle, action: ReturnType<typeof loadParameters>) {\n    try {\n        const parameters = yield call(services.container.ApiParameter.loadAll);\n        yield put(addParameters(parameters));\n        yield put(updateStatusLoadingParameters(loadStatus.loaded));\n    } catch (e) {\n        console.error(e);\n    }\n}\n\nexport default function* mainSaga(services: typeof bottle) {\n    yield takeEvery(types.LOAD_PARAMETERS, loadParametersAsync, services);\n}\n","import * as types from \"./types\";\nimport Product from \"src/models/product\";\n\nexport const addProducts = (products: Product[]) =>\n    ({\n        type: types.ADD_PRODUCTS,\n        products,\n    } as const);\n\nexport const loadProducts = () =>\n    ({\n        type: types.LOAD_PRODUCTS,\n    } as const);\n\nexport const loadProductById = (id: Product[\"id\"]) =>\n    ({\n        type: types.LOAD_PRODUCT_BY_ID,\n        id,\n    } as const);\n\nexport const createProduct = (product: Product) =>\n    ({\n        type: types.CREATE_PRODUCT,\n        product,\n    } as const);\n\nexport const createProductSuccess = (product: Product) =>\n    ({\n        type: types.CREATE_PRODUCT_SUCCESS,\n        product,\n    } as const);\n\nexport const updateProduct = (id: Product[\"id\"], product: Product) =>\n    ({\n        type: types.UPDATE_PRODUCT,\n        id,\n        product,\n    } as const);\n\nexport const updateProductSuccess = (product: Product) =>\n    ({\n        type: types.UPDATE_PRODUCT_SUCCESS,\n        product,\n    } as const);\n","import bottle from \"src/services\";\nimport { call, put, takeEvery } from \"@redux-saga/core/effects\";\nimport * as types from \"./types\";\nimport {\n    createProduct,\n    createProductSuccess,\n    loadProductById,\n    loadProducts,\n    updateProduct,\n    updateProductSuccess,\n} from \"./actions\";\nimport { addProducts } from \"src/store/products/actions\";\nimport {\n    updateStatusLoadingProduct,\n    updateStatusLoadingProducts,\n    updateStatusSavingProduct,\n} from \"src/store/main/actions\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { saveStatus } from \"../saveStatus\";\n\nfunction* loadProductsAsync(services: typeof bottle, action: ReturnType<typeof loadProducts>) {\n    try {\n        let products = yield call(services.container.ApiProduct.loadAll);\n        yield put(addProducts(products));\n        yield put(updateStatusLoadingProducts(loadStatus.loaded));\n    } catch (e) {\n        console.error(e);\n        yield put(updateStatusLoadingProducts(loadStatus.errorServer));\n    }\n}\n\nfunction* createProductAsync(services: typeof bottle, action: ReturnType<typeof createProduct>) {\n    try {\n        let product = yield call(services.container.ApiProduct.create, action.product);\n        yield put(createProductSuccess(product));\n        yield put(updateStatusSavingProduct(saveStatus.saved));\n    } catch (e) {\n        console.error(e);\n        yield put(updateStatusSavingProduct(saveStatus.errorServer));\n    }\n}\n\nfunction* loadProductByIdAsync(services: typeof bottle, action: ReturnType<typeof loadProductById>) {\n    try {\n        let product = yield call(services.container.ApiProduct.read, action.id);\n        yield put(addProducts([product]));\n        yield put(updateStatusLoadingProduct(loadStatus.loaded));\n    } catch (e) {\n        console.error(e);\n        yield put(updateStatusLoadingProduct(loadStatus.errorServer));\n    }\n}\n\nfunction* updateProductAsync(services: typeof bottle, action: ReturnType<typeof updateProduct>) {\n    try {\n        let product = yield call(services.container.ApiProduct.update, action.id, action.product);\n        yield put(updateProductSuccess(product));\n        yield put(updateStatusSavingProduct(saveStatus.saved));\n    } catch (e) {\n        console.error(e);\n        yield put(updateStatusSavingProduct(saveStatus.errorServer));\n    }\n}\n\nexport default function* mainSaga(services: typeof bottle) {\n    yield takeEvery(types.LOAD_PRODUCTS, loadProductsAsync, services);\n    yield takeEvery(types.LOAD_PRODUCT_BY_ID, loadProductByIdAsync, services);\n    yield takeEvery(types.CREATE_PRODUCT, createProductAsync, services);\n    yield takeEvery(types.UPDATE_PRODUCT, updateProductAsync, services);\n}\n","import { all } from \"redux-saga/effects\";\nimport Bottle from \"bottlejs\";\nimport parameterSaga from \"src/store/parameters/saga\";\nimport productSaga from \"src/store/products/saga\";\n\nexport default (services: Bottle) => {\n    return function* rootSaga() {\n        yield all([parameterSaga(services), productSaga(services)]);\n    };\n};\n","import MockAdapter from \"axios-mock-adapter\";\n\nexport function mock(axios: any) {\n    let mock = new MockAdapter(axios, { delayResponse: 1000 });\n\n    /* Products */\n    const products = [\n        {\n            id: \"7df78ad8902c6313\",\n            name: \"Apple iPhone SE 2 2020\",\n            description:\n                \"Смартфон Apple iPhone SE выделяется классическим минималистским исполнением и мощными характеристиками. Металлический корпус смартфона защищен от пыли и воды, а также способен выдерживать погружение под воду. На 4.7-дюймовом дисплее IPS отображается детализированная картинка с сочными и реалистичными цветами.\",\n            parameters: {\n                manufacturer: \"Apple\",\n                model: \"iPhone SE 2\",\n                price: \"42749\",\n            },\n        },\n        {\n            id: \"5879b0f65a56a454\",\n            name: \"SAMSUNG Galaxy S20\",\n            description:\n                \"Смартфон Samsung в светло-серебристом корпусе из стекла смотрится очень эффектно. При этом модель объединила в себе такие возможности, которые позволяют ей всерьез конкурировать с профессиональными фото- и видеокамерами. Основная камера состоит из 3 модулей, обладает 30-кратным зумом и способна делать фото с разрешением до 64+12+12 Мп.\",\n            parameters: {\n                manufacturer: \"SAMSUNG\",\n                model: \"Galaxy S20\",\n                price: \"56499\",\n            },\n        },\n    ];\n\n    //loadAll\n    mock.onGet(\"/api/products/\").reply(200, products);\n\n    //create\n    mock.onPut(\"/api/products/\").reply((config) => {\n        const product = { ...JSON.parse(config.data), id: Date.now().toString() };\n        products.push(product);\n\n        mock.onPost(\"/api/products/\" + product.id).reply((config) => {\n            return [200, JSON.parse(config.data)];\n        });\n\n        return [200, product];\n    });\n\n    //read\n    products.forEach((product) => {\n        mock.onGet(\"/api/products/\" + product.id).reply(200, product);\n    });\n\n    //update\n    products.forEach((product) => {\n        mock.onPost(\"/api/products/\" + product.id).reply((config) => {\n            return [200, JSON.parse(config.data)];\n        });\n    });\n    /* End Products */\n\n    /* Parameters */\n    const parameters = [\n        {\n            key: \"manufacturer\",\n            name: \"Производитель\",\n            description: \"\",\n            prefix: \"\",\n            suffix: \"\",\n        },\n        {\n            key: \"model\",\n            name: \"Модель\",\n            description: \"\",\n            prefix: \"\",\n            suffix: \"\",\n        },\n        {\n            key: \"price\",\n            name: \"Цена\",\n            description: \"\",\n            prefix: \"\",\n            suffix: \"р.\",\n        },\n    ];\n\n    //loadAll\n    mock.onGet(\"/api/parameters/\").reply(200, parameters);\n    /* End Parameters */\n}\n","import { IHttp } from \"./IHttp\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { mock } from \"./mock\";\n\nmock(axios);\n\nexport default class Http implements IHttp {\n    get = (url: string, data: object) => {\n        return this.request(\"GET\", url, data);\n    };\n\n    post = (url: string, data: object) => {\n        return this.request(\"POST\", url, data);\n    };\n\n    put = (url: string, data: object) => {\n        return this.request(\"PUT\", url, data);\n    };\n\n    delete = (url: string, data: object) => {\n        return this.request(\"DELETE\", url, data);\n    };\n\n    request = (method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" = \"GET\", url: string, data = {}) => {\n        return axios({ method: method, url: \"/api\" + url, data: data }).then(\n            (response: AxiosResponse) => response.data\n        );\n    };\n}\n","import { Record } from \"immutable\";\n\nexport interface IParameter {\n    key: string;\n    name: string;\n    description: string;\n    prefix: string;\n    suffix: string;\n}\n\nconst initialParameter: IParameter = {\n    key: \"\",\n    name: \"\",\n    description: \"\",\n    prefix: \"\",\n    suffix: \"\",\n};\n\nexport default class Parameter extends Record(initialParameter) {}\n","import { Record } from \"immutable\";\nimport { TStoreProduct } from \"src/store/products/reducer\";\n\nexport interface IProduct {\n    id: string;\n    name: string;\n    description: string;\n    parameters: { [key: string]: string };\n}\n\nconst initialProduct: IProduct = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    parameters: {},\n};\n\nexport const filterBySearchWord = (products: Readonly<TStoreProduct>, searchWord: string) => {\n    return products.filter((product) => {\n        const reg = new RegExp(searchWord, \"i\");\n\n        return [...Object.values(product.parameters), product.name, product.description].join(\"|\").search(reg) !== -1;\n    });\n};\n\nexport default class Product extends Record(initialProduct) {}\n","import Bottle from \"bottlejs\";\nimport Http from \"./http\";\nimport ApiParameter from \"./api/apiParameter\";\nimport ApiProduct from \"./api/apiProduct\";\n\nlet bottle = new Bottle();\n\nexport default bottle;\nbottle.service(\"Http\", Http);\nbottle.service(\"ApiParameter\", ApiParameter, \"Http\");\nbottle.service(\"ApiProduct\", ApiProduct, \"Http\");\n\ndeclare module \"bottlejs\" {\n    interface IContainer {\n        ApiParameter: ApiParameter;\n        ApiProduct: ApiProduct;\n    }\n}\n","import { IHttp } from \"../IHttp\";\nimport Parameter from \"src/models/parameter\";\n\nexport interface IApiParameter {\n    id: string;\n    name: string;\n    description: string;\n}\n\nexport default class ApiParameter {\n    constructor(private http: IHttp, private url: string = \"/parameters\") {}\n\n    loadAll = () => {\n        return this.http\n            .get(this.url + \"/\")\n            .then((response) => response.map((apiParameter: IApiParameter) => new Parameter(apiParameter)));\n    };\n}\n","import { IHttp } from \"../IHttp\";\nimport Product from \"src/models/product\";\n\nexport interface IApiProduct {\n    id: string;\n    name: string;\n    description: string;\n    parameters: { [key: string]: string };\n}\n\nexport default class ApiProduct {\n    constructor(private http: IHttp, private url: string = \"/products\") {}\n\n    loadAll = () => {\n        return this.http\n            .get(this.url + \"/\")\n            .then((response) => response.map((apiProduct: IApiProduct) => new Product(apiProduct)));\n    };\n\n    create = (product: Product) => {\n        return this.http.put(this.url + \"/\", product.toJSON()).then((response) => new Product(response));\n    };\n\n    read = (id: Product[\"id\"]) => {\n        return this.http.get(this.url + \"/\" + id).then((response) => new Product(response));\n    };\n\n    update = (id: Product[\"id\"], product: Product) => {\n        return this.http.post(this.url + \"/\" + id, product.toJSON()).then((response) => new Product(response));\n    };\n}\n","import { useDispatch } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { allActionsTypes } from \"src/store/actionTypes\";\n\nexport default function useCustomDispatch() {\n    return useDispatch<Dispatch<allActionsTypes>>();\n}\n","import { useSelector } from \"react-redux\";\nimport { IStore } from \"src/store/rootReducer\";\nimport * as rootSelector from \"src/store/rootSelector\";\n\ntype InferSelectorFunctionsTypes<T> = T extends { [key: string]: infer U } ? U : never;\n\ntype InferredTypes = InferSelectorFunctionsTypes<typeof rootSelector>;\n\nexport default function useCustomSelector<T extends InferredTypes>(selector: T, arg?: number | string) {\n    return useSelector((state: IStore) => selector(state, arg) as ReturnType<T>);\n}\n","import { createSelector } from \"reselect\";\nimport { IStore } from \"src/store/rootReducer\";\nimport {\n    getStatusLoadingProduct,\n    getStatusLoadingProducts,\n    getStatusLoadingParameters,\n    getStatusSavingProduct,\n} from \"./main/selectors\";\nimport { filterBySearchWord } from \"../models/product\";\n\nconst propsFirstSelector = (_: IStore, prop: any) => prop;\n\nexport const mainState = (state: Readonly<IStore>) => state.main;\nexport const mainGetStatusLoadingProduct = createSelector(mainState, getStatusLoadingProduct);\nexport const mainGetStatusLoadingProducts = createSelector(mainState, getStatusLoadingProducts);\nexport const mainGetStatusLoadingParameters = createSelector(mainState, getStatusLoadingParameters);\nexport const mainGetStatusSavingProduct = createSelector(mainState, getStatusSavingProduct);\n\nexport const parameterState = (state: Readonly<IStore>) => state.parameters;\n\nexport const productState = (state: Readonly<IStore>) => state.products;\nexport const productsGetById = createSelector(productState, propsFirstSelector, (products, id) => {\n    return products.find((product) => product.id === id);\n});\n\nexport const productFilterBySearchWord = (state: Readonly<IStore>) => {\n    if (state.main.searchWord.length === 0) return state;\n\n    return { ...state, products: filterBySearchWord(state.products, state.main.searchWord) };\n};\n\nexport const productGetProductsFilterBySearchWord = createSelector(productFilterBySearchWord, productState);\n","import { TStoreMain } from \"./reducer\";\n\nexport const getStatusLoadingProduct = (state: TStoreMain) => state.statusLoadingProduct;\nexport const getStatusLoadingProducts = (state: TStoreMain) => state.statusLoadingProducts;\nexport const getStatusLoadingParameters = (state: TStoreMain) => state.statusLoadingParameters;\nexport const getStatusSavingProduct = (state: TStoreMain) => state.statusSavingProduct;\nexport const getSearchWord = (state: TStoreMain) => state.searchWord;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Warning as WarningStyledIcon } from \"@styled-icons/entypo/Warning\";\nimport { Loader5 as LoaderStyledIcon } from \"@styled-icons/remix-fill/Loader5\";\n\ninterface IAlertProps {\n    type: \"preload\" | \"warning\";\n    text: string;\n}\n\nexport default function Alert(props: IAlertProps) {\n    return (\n        <Wrapper>\n            {props.type === \"preload\" && (\n                <>\n                    <LoaderIcon size=\"28\" /> {props.text}\n                </>\n            )}\n            {props.type === \"warning\" && (\n                <>\n                    <WarningIcon size=\"28\" /> {props.text}\n                </>\n            )}\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 50% 0;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 28px;\n    color: #4a4a4a;\n`;\n\nconst LoaderIcon = styled(LoaderStyledIcon)`\n    animation: rotate 2s linear infinite;\n    color: #2196f3;\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`;\n\nconst WarningIcon = styled(WarningStyledIcon)`\n    color: #ff0000;\n`;\n","import React, { useEffect } from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport { loadParameters } from \"src/store/parameters/actions\";\nimport Alert from \"src/components/Alert/Alert\";\n\nexport default function LoadParameters() {\n    const dispatch = useCustomDispatch();\n\n    useEffect(() => {\n        dispatch(loadParameters());\n        // eslint-disable-next-line\n    }, []);\n\n    return <Alert type=\"preload\" text=\"Загрузка...\" />;\n}\n","import React, { useEffect } from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport { loadProducts } from \"src/store/products/actions\";\nimport Alert from \"src/components/Alert/Alert\";\n\nexport default function LoadProducts() {\n    const dispatch = useCustomDispatch();\n\n    useEffect(() => {\n        dispatch(loadProducts());\n        // eslint-disable-next-line\n    }, []);\n\n    return <Alert type=\"preload\" text=\"Загрузка...\" />;\n}\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { IThemeProps } from \"src/App\";\n\ninterface ITitleFirstProps {\n    children: ReactNode;\n}\n\nexport default function TitleFirst(props: ITitleFirstProps) {\n    return <Wrapper>{props.children}</Wrapper>;\n}\n\nconst Wrapper = styled.h1`\n    font-weight: 600;\n    font-size: 1.5em;\n    line-height: 2em;\n    color: ${(props: IThemeProps) => props.theme.color_title};\n`;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { IThemeProps } from \"src/App\";\n\ninterface ITitleSecondProps {\n    children: ReactNode;\n}\n\nexport default function TitleSecond(props: ITitleSecondProps) {\n    return <Wrapper>{props.children}</Wrapper>;\n}\n\nconst Wrapper = styled.h1`\n    font-weight: 600;\n    font-size: 1.2em;\n    line-height: 2em;\n    color: ${(props: IThemeProps) => props.theme.color_title};\n`;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { IThemeProps } from \"src/App\";\n\ninterface ITitlePanelProps {\n    children?: ReactNode;\n}\n\nexport default function TitlePanel(props: ITitlePanelProps) {\n    return <TitlePanelStyled>{props.children}</TitlePanelStyled>;\n}\n\nconst TitlePanelStyled = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin: 15px 0;\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_mobile}px) {\n        flex-flow: column;\n    }\n`;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { IThemeProps } from \"src/App\";\nimport { Link } from \"react-router-dom\";\n\ninterface ILinkButtonProps {\n    className?: string;\n    children?: ReactNode;\n    to: string;\n}\n\nexport default function LinkButton(props: ILinkButtonProps) {\n    return <LinkButtonStyled {...props}>{props.children}</LinkButtonStyled>;\n}\n\nconst LinkButtonStyled = styled(Link)`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${(props: IThemeProps) => props.theme.color_main};\n    border: 1px solid ${(props: IThemeProps) => props.theme.color_main};\n    border-radius: 2px;\n    padding: 0.5em 1em;\n    text-decoration: none;\n    line-height: 2em;\n    color: #fff;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #359eef;\n    }\n`;\n","import React, { ChangeEvent } from \"react\";\nimport styled from \"styled-components\";\nimport { IThemeProps } from \"../../App\";\n\ninterface IFieldInputProps {\n    className?: string;\n    value?: string;\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n    placeholder?: string;\n}\n\nexport default function FieldInput(props: IFieldInputProps) {\n    return <FieldInputStyled {...props} />;\n}\n\nconst FieldInputStyled = styled.input`\n    display: block;\n    width: 100%;\n    border: 1px solid #9abbce;\n    border-radius: 2px;\n    line-height: 3em;\n    height: 3em;\n    padding: 0 1em;\n    box-sizing: border-box;\n\n    &:hover,\n    &:focus {\n        border: 1px solid ${(props: IThemeProps) => props.theme.color_main};\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport FieldInput from \"src/components/UI/FieldInput\";\nimport { IThemeProps } from \"src/App\";\n\ninterface IFormSearchProps {\n    handleChangeSearch: (searchWord: string) => void;\n}\n\nexport default function FormSearch(props: IFormSearchProps) {\n    return (\n        <Wrapper>\n            <Label>Поиск:</Label>\n            <FieldSearchInput\n                onChange={(e) => props.handleChangeSearch(e.target.value)}\n                placeholder=\"К примеру: apple, фото, 42\"\n            />\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    display: flex;\n    margin: 15px 0;\n`;\n\nconst Label = styled.div`\n    flex-grow: 0;\n    white-space: nowrap;\n    font-weight: 600;\n    font-size: 1.2em;\n    line-height: 2em;\n    padding-right: 0.5em;\n    color: ${(props: IThemeProps) => props.theme.color_main};\n`;\n\nconst FieldSearchInput = styled(FieldInput)`\n    flex-grow: 1;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ProductModel from \"src/models/product\";\nimport { TStoreParameter } from \"src/store/parameters/reducer\";\n\ninterface IListParametersProps {\n    productParameters: ProductModel[\"parameters\"];\n    libraryParameters: TStoreParameter;\n}\n\nexport default function ListParameters(props: IListParametersProps) {\n    const dictionaryGetByKey = (key: string) =>\n        props.libraryParameters.find((libraryParameter) => libraryParameter.key === key);\n\n    return (\n        <Wrapper>\n            {Object.entries(props.productParameters).map((keyValue) => (\n                <Parameter key={keyValue[0]}>\n                    <Label>{dictionaryGetByKey(keyValue[0])?.name + \":\"}</Label>\n                    <Value>\n                        {keyValue[1]} {dictionaryGetByKey(keyValue[0])?.suffix}\n                    </Value>\n                </Parameter>\n            ))}\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div``;\n\nconst Parameter = styled.div`\n    display: flex;\n    width: 100%;\n`;\n\nconst Label = styled.div`\n    flex-basis: 50%;\n    padding-right: 5px;\n    font-weight: 600;\n    color: #a0b0b9;\n    line-height: 2em;\n`;\n\nconst Value = styled.div`\n    line-height: 2em;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { parameterState } from \"src/store/rootSelector\";\nimport ProductModel from \"src/models/product\";\nimport ListParameters from \"./ListParameters/ListParameters\";\nimport TitlePanel from \"src/components/UI/TitlePanel\";\nimport TitleFirst from \"src/components/UI/TitleFirst\";\nimport LinkButton from \"src/components/UI/LinkButton\";\nimport TitleSecond from \"src/components/UI/TitleSecond\";\n\nimport { IThemeProps } from \"src/App\";\nimport { Edit } from \"@styled-icons/boxicons-regular/Edit\";\n\ninterface IProductProps {\n    product: ProductModel;\n}\n\nexport default function Product(props: IProductProps) {\n    const parameters = useCustomSelector(parameterState);\n\n    return (\n        <CardProduct>\n            <HeadCardProduct>\n                <TitlePanel>\n                    <Name>{props.product.name}</Name>\n                    <LinkButton to={\"/products/\" + props.product.id}>\n                        <EditIcon size=\"16\" />\n                        Редактировать товар\n                    </LinkButton>\n                </TitlePanel>\n            </HeadCardProduct>\n            <BodyCardProduct>\n                <BockDescription>\n                    <TitleBlock>Описание</TitleBlock>\n                    <Text>{props.product.description}</Text>\n                </BockDescription>\n                <BockListParameters>\n                    <TitleBlock>Параметры</TitleBlock>\n                    <ListParameters productParameters={props.product.parameters} libraryParameters={parameters} />\n                </BockListParameters>\n            </BodyCardProduct>\n        </CardProduct>\n    );\n}\n\nconst CardProduct = styled.div`\n    margin: 20px 0;\n    padding: 20px;\n    background: #ffffff;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    border-radius: 5px;\n`;\n\nconst HeadCardProduct = styled.div``;\n\nconst Name = styled(TitleFirst)``;\n\nconst EditIcon = styled(Edit)`\n    padding-right: 3px;\n`;\n\nconst BodyCardProduct = styled.div`\n    display: flex;\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_tablet}px) {\n        flex-direction: column-reverse;\n    }\n`;\nconst BockDescription = styled.div`\n    flex-basis: 60%;\n    padding-right: 30px;\n`;\n\nconst TitleBlock = styled(TitleSecond)``;\n\nconst Text = styled.article`\n    color: #353535;\n    line-height: 1.5em;\n`;\n\nconst BockListParameters = styled.div`\n    flex-basis: 40%;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Product from \"./Product/Product\";\nimport { TStoreProduct } from \"src/store/products/reducer\";\n\ninterface IListProductsProps {\n    products: TStoreProduct;\n}\n\nexport default function ListProducts(props: IListProductsProps) {\n    return (\n        <Wrapper>\n            {props.products.valueSeq().map((product) => (\n                <Product product={product} key={product.id} />\n            ))}\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    max-width: 935px;\n    margin: 0 auto;\n    font-size: 16px;\n    background-color: #fafafa;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport {\n    mainGetStatusLoadingParameters,\n    mainGetStatusLoadingProducts,\n    productGetProductsFilterBySearchWord,\n} from \"src/store/rootSelector\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport { updateSearchWord } from \"src/store/main/actions\";\nimport Alert from \"src/components/Alert/Alert\";\nimport LoadParameters from \"src/components/Loading/LoadParameters\";\nimport LoadProducts from \"src/components/Loading/LoadProducts\";\nimport TitleFirst from \"src/components/UI/TitleFirst\";\nimport TitleSecond from \"src/components/UI/TitleSecond\";\nimport TitlePanel from \"src/components/UI/TitlePanel\";\nimport LinkButton from \"src/components/UI/LinkButton\";\nimport FormSearch from \"src/components/FormSearch/FormSearch\";\nimport ListProducts from \"src/components/ListProducts/ListProducts\";\n\nimport { Plus as PlusIcon } from \"@styled-icons/boxicons-regular/Plus\";\n\nexport default function MainPage() {\n    const dispatch = useCustomDispatch();\n    const statusProducts = useCustomSelector(mainGetStatusLoadingProducts);\n    const statusParameters = useCustomSelector(mainGetStatusLoadingParameters);\n    const products = useCustomSelector(productGetProductsFilterBySearchWord);\n\n    const handleChangeSearch = (searchWord: string) => {\n        dispatch(updateSearchWord(searchWord));\n    };\n\n    if (statusParameters !== loadStatus.loaded) {\n        return (\n            <>\n                {statusParameters === loadStatus.notLoaded && <LoadParameters />}\n                {statusParameters === loadStatus.errorServer && <Alert type=\"warning\" text=\"Ошибка сервера\" />}\n            </>\n        );\n    }\n\n    return (\n        <Wrapper>\n            {statusProducts === loadStatus.notLoaded && <LoadProducts />}\n            {statusProducts === loadStatus.errorServer && <Alert type=\"warning\" text=\"Ошибка сервера\" />}\n            {statusProducts === loadStatus.loaded && (\n                <>\n                    <TitlePanel>\n                        <TitleFirst>Список товаров</TitleFirst>\n                        <LinkButton to=\"/products/create\">\n                            <PlusIcon size=\"20\" />\n                            Создать товар\n                        </LinkButton>\n                    </TitlePanel>\n                    <FormSearch handleChangeSearch={handleChangeSearch} />\n                    {products.size > 0 ? (\n                        <ListProducts products={products} />\n                    ) : (\n                        <TitleSecond>Товар не найден</TitleSecond>\n                    )}\n                </>\n            )}\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div``;\n","import React, { useEffect } from \"react\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport { loadProductById } from \"src/store/products/actions\";\nimport Alert from \"src/components/Alert/Alert\";\n\ninterface ILoadProductProps {\n    idProduct: string;\n}\n\nexport default function LoadProduct(props: ILoadProductProps) {\n    const dispatch = useCustomDispatch();\n\n    useEffect(() => {\n        dispatch(loadProductById(props.idProduct));\n        // eslint-disable-next-line\n    }, []);\n\n    return <Alert type=\"preload\" text=\"Загрузка...\" />;\n}\n","import React, { ChangeEvent } from \"react\";\nimport styled from \"styled-components\";\nimport { IThemeProps } from \"src/App\";\n\ninterface IFieldTextareaProps {\n    className?: string;\n    value?: string;\n    onChange?: (e: ChangeEvent<HTMLTextAreaElement>) => void;\n}\n\nexport default function FieldTextarea(props: IFieldTextareaProps) {\n    return <FieldTextareaStyled {...props} />;\n}\n\nconst FieldTextareaStyled = styled.textarea`\n    display: block;\n    width: 100%;\n    border: 1px solid #9abbce;\n    border-radius: 2px;\n    line-height: 1.5em;\n    padding: 1em;\n    box-sizing: border-box;\n\n    &:hover,\n    &:focus {\n        border: 1px solid ${(props: IThemeProps) => props.theme.color_main};\n    }\n`;\n","import React, { ReactNode, RefObject } from \"react\";\nimport { IThemeProps } from \"src/App\";\nimport styled from \"styled-components\";\n\ninterface IFieldSelectProps {\n    className?: string;\n    children?: ReactNode;\n    innerRef?: RefObject<HTMLSelectElement>;\n}\n\nexport default function FieldSelect(props: IFieldSelectProps) {\n    return (\n        <FieldSelectStyled {...props} ref={props.innerRef}>\n            {props.children}\n        </FieldSelectStyled>\n    );\n}\n\nconst FieldSelectStyled = styled.select`\n    display: block;\n    width: 100%;\n    border: 1px solid #9abbce;\n    border-radius: 2px;\n    line-height: 3em;\n    height: 3em;\n    padding: 0 1em;\n    box-sizing: border-box;\n\n    &:hover,\n    &:focus {\n        border: 1px solid ${(props: IThemeProps) => props.theme.color_main};\n    }\n`;\n","import React, { MouseEvent, ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { IThemeProps } from \"src/App\";\n\ninterface IButtonProps {\n    className?: string;\n    children?: ReactNode;\n    onClick?: (e: MouseEvent<HTMLButtonElement>) => void;\n}\n\nexport default function Button(props: IButtonProps) {\n    return <ButtonStyled {...props}>{props.children}</ButtonStyled>;\n}\n\nconst ButtonStyled = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${(props: IThemeProps) => props.theme.color_main};\n    border: 1px solid ${(props: IThemeProps) => props.theme.color_main};\n    border-radius: 2px;\n    color: #fff;\n    height: 3em;\n    padding: 0 1em;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #359eef;\n    }\n`;\n","import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useCustomDispatch from \"src/hooks/useCustomDispatch\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { createProduct, updateProduct } from \"src/store/products/actions\";\nimport { mainGetStatusSavingProduct, parameterState } from \"src/store/rootSelector\";\nimport ProductModel from \"src/models/product\";\nimport TitleSecond from \"src/components/UI/TitleSecond\";\nimport TitleFirst from \"src/components/UI/TitleFirst\";\nimport TitlePanel from \"src/components/UI/TitlePanel\";\nimport LinkButton from \"src/components/UI/LinkButton\";\nimport FieldInput from \"src/components/UI/FieldInput\";\nimport FieldTextarea from \"src/components/UI/FieldTextarea\";\nimport FieldSelect from \"src/components/UI/FieldSelect\";\nimport Button from \"src/components/UI/Button\";\nimport { ListUl as ListIcon } from \"@styled-icons/boxicons-regular/ListUl\";\nimport { Trash as TrashIcon } from \"@styled-icons/boxicons-regular/Trash\";\nimport { Plus as PlusIcon } from \"@styled-icons/boxicons-regular/Plus\";\nimport { IThemeProps } from \"../../App\";\nimport { updateStatusSavingProduct } from \"../../store/main/actions\";\nimport { saveStatus } from \"../../store/saveStatus\";\nimport { CloudUpload as NoSavedIcon } from \"@styled-icons/boxicons-regular/CloudUpload\";\nimport { Loader5 as SavedIcon } from \"@styled-icons/remix-fill/Loader5\";\nimport { Check as SaveIcon } from \"@styled-icons/boxicons-regular/Check\";\n\ninterface IProductFormProps {\n    product: ProductModel;\n    typeForm: \"create\" | \"edit\";\n}\n\nexport default function FormProduct(props: IProductFormProps) {\n    const dispatch = useCustomDispatch();\n    const libraryParameters = useCustomSelector(parameterState);\n    const [product, setProduct] = useState(props.product);\n    const [isProductNotSaved, setIsProductNotSaved] = useState(true);\n    const refSelectAddParameter = useRef<HTMLSelectElement>(null);\n    const saveStatusProduct = useCustomSelector(mainGetStatusSavingProduct);\n\n    const availableParameters = libraryParameters.filter(\n        (libraryParameter) => !(libraryParameter.key in product.parameters)\n    );\n\n    const dictionaryGetByKey = (key: string) =>\n        libraryParameters.find((libraryParameter) => libraryParameter.key === key);\n\n    const handleChangeValueStaticParameter = (key: \"name\" | \"description\", value: string) => {\n        setIsProductNotSaved(true);\n        setProduct(product.set(key, value));\n    };\n\n    const handleChangeValueDynamicParameter = (key: string, value: string) => {\n        setIsProductNotSaved(true);\n        setProduct(product.set(\"parameters\", { ...product.parameters, [key]: value }));\n    };\n\n    const handleAddParameter = () => {\n        if (refSelectAddParameter.current) {\n            setIsProductNotSaved(true);\n            setProduct(product.set(\"parameters\", { ...product.parameters, [refSelectAddParameter.current.value]: \"\" }));\n        }\n    };\n\n    const handleDeleteParameter = (key: string) => {\n        setIsProductNotSaved(true);\n        Reflect.deleteProperty(product.parameters, key);\n        setProduct(product.set(\"parameters\", { ...product.parameters }));\n    };\n\n    const handleSave = () => {\n        dispatch(updateStatusSavingProduct(saveStatus.save));\n        setIsProductNotSaved(false);\n        dispatch(props.typeForm === \"create\" ? createProduct(product) : updateProduct(product.id, product));\n    };\n\n    return (\n        <>\n            <TitlePanel>\n                <TitleFirst>{props.typeForm === \"create\" ? \"Создание товара\" : \"Редактирование товара\"}</TitleFirst>\n                <LinkButton to={\"/products\"}>\n                    <ListIcon size=\"20\" />К списку товаров\n                </LinkButton>\n            </TitlePanel>\n            <Panel>\n                <TitleSecond>Статичные параметры</TitleSecond>\n                <StaticParameter>\n                    <Label>Название:</Label>\n                    <FieldName\n                        value={product.name}\n                        onChange={(e) => handleChangeValueStaticParameter(\"name\", e.target.value)}\n                    />\n                </StaticParameter>\n                <StaticParameter>\n                    <Label>Описание:</Label>\n                    <FieldDescription\n                        value={product.description}\n                        onChange={(e) => handleChangeValueStaticParameter(\"description\", e.target.value)}\n                    />\n                </StaticParameter>\n            </Panel>\n            <Panel>\n                <TitleSecond>Динамические параметры</TitleSecond>\n                <ListParameters>\n                    {Object.entries(product.parameters).map((keyValue) => (\n                        <DynamicParameter key={keyValue[0]}>\n                            <LabelParameter>{dictionaryGetByKey(keyValue[0])?.name + \":\"}</LabelParameter>\n                            <WrapperFieldParameter>\n                                <FieldInput\n                                    value={keyValue[1]}\n                                    onChange={(e) => handleChangeValueDynamicParameter(keyValue[0], e.target.value)}\n                                />\n                            </WrapperFieldParameter>\n                            <ButtonDeleteParameter onClick={() => handleDeleteParameter(keyValue[0])}>\n                                <TrashIcon size=\"20\" />\n                                <TextButtonDeleteParameter>Удалить</TextButtonDeleteParameter>\n                            </ButtonDeleteParameter>\n                        </DynamicParameter>\n                    ))}\n\n                    {availableParameters.size > 0 && (\n                        <DynamicParameter>\n                            <LabelParameter>Добавить параметр:</LabelParameter>\n                            <WrapperFieldParameter>\n                                <FieldSelect innerRef={refSelectAddParameter}>\n                                    {availableParameters.valueSeq().map((parameter) => (\n                                        <option value={parameter.key} key={parameter.key}>\n                                            {parameter.name}\n                                        </option>\n                                    ))}\n                                </FieldSelect>\n                            </WrapperFieldParameter>\n                            <ButtonAddParameter onClick={handleAddParameter}>\n                                <PlusIcon size=\"20\" />\n                                <TextButtonAddParameter>Добавить</TextButtonAddParameter>\n                            </ButtonAddParameter>\n                        </DynamicParameter>\n                    )}\n                </ListParameters>\n            </Panel>\n            <Panel>\n                <ButtonSaveProduct onClick={handleSave}>\n                    {(saveStatusProduct === saveStatus.notSaved || isProductNotSaved) && <NoSavedIcon size=\"20\" />}\n                    {saveStatusProduct === saveStatus.save && !isProductNotSaved && <LoaderIcon size=\"20\" />}\n                    {saveStatusProduct === saveStatus.saved && !isProductNotSaved && <SaveIcon size=\"20\" />}\n                    {saveStatusProduct === saveStatus.errorServer &&\n                        !isProductNotSaved &&\n                        \"Ошибка сервера! Не удалось \"}\n                    {props.typeForm === \"create\" ? \"Создать товар\" : \"Сохранить товар\"}\n                </ButtonSaveProduct>\n            </Panel>\n        </>\n    );\n}\n\nconst Panel = styled.div`\n    padding-bottom: 10px;\n`;\n\nconst Label = styled.div`\n    padding-right: 5px;\n    font-weight: 600;\n    color: #a0b0b9;\n    line-height: 3em;\n`;\n\nconst StaticParameter = styled.div`\n    padding-bottom: 5px;\n`;\n\nconst FieldName = styled(FieldInput)``;\n\nconst FieldDescription = styled(FieldTextarea)`\n    height: 200px;\n`;\n\nconst ListParameters = styled.div``;\n\nconst DynamicParameter = styled.div`\n    display: flex;\n    padding-bottom: 5px;\n    flex-wrap: wrap;\n    width: 100%;\n    justify-content: space-between;\n`;\n\nconst LabelParameter = styled(Label)`\n    flex-basis: 14%;\n    white-space: nowrap;\n    min-width: 150px;\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_mobile}px) {\n        flex-basis: 100%;\n    }\n`;\n\nconst WrapperFieldParameter = styled.div`\n    flex-basis: 48%;\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_mobile}px) {\n        flex-basis: 78%;\n    }\n`;\n\nconst ButtonParameter = styled(Button)`\n    flex-basis: 14%;\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_mobile}px) {\n        flex-basis: 18%;\n    }\n`;\n\nconst ButtonDeleteParameter = styled(ButtonParameter)`\n    background-color: #c41732;\n    border: 1px solid #ac0020;\n\n    &:hover {\n        background-color: #d22540;\n    }\n\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_tablet}px) {\n        width: 30px;\n    }\n`;\n\nconst TextButtonDeleteParameter = styled.span`\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_tablet}px) {\n        display: none;\n    }\n`;\n\nconst TextButtonAddParameter = styled.span`\n    @media (max-width: ${(props: IThemeProps) => props.theme.media_tablet}px) {\n        display: none;\n    }\n`;\n\nconst ButtonAddParameter = styled(ButtonParameter)``;\n\nconst ButtonSaveProduct = styled(Button)``;\n\nconst LoaderIcon = styled(SavedIcon)`\n    animation: rotate 2s linear infinite;\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { useParams } from \"react-router\";\nimport { mainGetStatusLoadingParameters, mainGetStatusLoadingProduct, productsGetById } from \"src/store/rootSelector\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport Alert from \"src/components/Alert/Alert\";\nimport LoadParameters from \"src/components/Loading/LoadParameters\";\nimport LoadProduct from \"src/components/Loading/LoadProduct\";\nimport FormProduct from \"src/components/FormProduct/FormProduct\";\n\ninterface IParam {\n    idProduct: string;\n}\n\nexport default function EditProductPage() {\n    const statusParameters = useCustomSelector(mainGetStatusLoadingParameters);\n    const statusProduct = useCustomSelector(mainGetStatusLoadingProduct);\n    const { idProduct } = useParams<IParam>();\n    const product = useCustomSelector(productsGetById, idProduct);\n\n    if (statusParameters !== loadStatus.loaded) {\n        return (\n            <>\n                {statusParameters === loadStatus.notLoaded && <LoadParameters />}\n                {statusParameters === loadStatus.errorServer && <Alert type=\"warning\" text=\"Ошибка сервера\" />}\n            </>\n        );\n    }\n\n    return (\n        <Wrapper>\n            {!product && statusProduct !== loadStatus.errorServer && <LoadProduct idProduct={idProduct} />}\n            {statusProduct === loadStatus.errorServer && <Alert type=\"warning\" text=\"Ошибка сервера\" />}\n            {product && <FormProduct product={product} typeForm=\"edit\" />}\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div``;\n","import React from \"react\";\nimport Product from \"src/models/product\";\nimport useCustomSelector from \"src/hooks/useCustomSelector\";\nimport { mainGetStatusLoadingParameters } from \"src/store/rootSelector\";\nimport { loadStatus } from \"src/store/loadStatus\";\nimport Alert from \"src/components/Alert/Alert\";\nimport LoadParameters from \"src/components/Loading/LoadParameters\";\nimport FormProduct from \"src/components/FormProduct/FormProduct\";\n\nexport default function CreateProductPage() {\n    const product = new Product();\n\n    const statusParameters = useCustomSelector(mainGetStatusLoadingParameters);\n\n    if (statusParameters !== loadStatus.loaded) {\n        return (\n            <>\n                {statusParameters === loadStatus.notLoaded && <LoadParameters />}\n                {statusParameters === loadStatus.errorServer && <Alert type=\"warning\" text=\"Ошибка сервера\" />}\n            </>\n        );\n    }\n\n    return <FormProduct product={product} typeForm=\"create\" />;\n}\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport MainPage from \"./components/MainPage/MainPage\";\nimport EditProductPage from \"./components/EditProductPage/EditProductPage\";\nimport CreateProductPage from \"./components/CreateProductPage/CreateProductPage\";\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Wrapper>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Redirect to=\"/products\" />\n                    </Route>\n                    <Route exact path=\"/products\" component={MainPage} />\n                    <Route exact path=\"/products/create\" component={CreateProductPage} />\n                    <Route exact path=\"/products/:idProduct\" component={EditProductPage} />\n                </Switch>\n            </Wrapper>\n        </ThemeProvider>\n    );\n}\n\nexport interface IThemeProps {\n    theme: {\n        media_tablet: number;\n        media_mobile: number;\n        color_main: string;\n        color_title: string;\n    };\n}\n\nexport const theme = {\n    media_tablet: 768,\n    media_mobile: 414,\n    color_main: \"#2196f3\",\n    color_title: \"#2196f3\",\n};\n\nconst Wrapper = styled.div`\n    max-width: 935px;\n    margin: 0 auto;\n    font-size: 16px;\n    background-color: #fafafa;\n    padding: 0 10px;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { createHashHistory } from \"history\";\nimport { routerMiddleware, ConnectedRouter } from \"connected-react-router\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./store/rootReducer\";\nimport rootSaga from \"./store/rootSaga\";\nimport services from \"./services\";\nimport * as packageJson from \"../package.json\";\nimport App from \"./App\";\n\nimport \"reset-css\";\nimport \"./index.css\";\n\nexport const history = createHashHistory({ basename: packageJson.homepage });\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    rootReducer(history),\n    composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nsagaMiddleware.run(rootSaga(services));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <App />\n            </ConnectedRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}